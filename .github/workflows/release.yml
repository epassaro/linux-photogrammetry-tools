name: ci

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'

  release:
    types:
     - published

jobs:
  build:
    runs-on: ubuntu-18.04
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: set variables
        run: |
          if [[ ${{ github.event_name }} == 'release' ]]; then
            echo "DIRNAME=lpt-${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          else
            echo "DIRNAME=lpt-dev$(git rev-list HEAD --count)" >> $GITHUB_ENV
          fi

      - name: install build dependencies
        run: |
          sudo apt update
          sudo apt install build-essential git gfortran liblapack-dev libgsl-dev \
                            minpack-dev f2c jhead zlib1g-dev libjpeg62-dev \
                            libceres-dev cmake

      - name: clone vlfeat
        run: |
          git clone https://github.com/vlfeat/vlfeat.git
          cd vlfeat
          git checkout 1b9075f
          cd -

      - name: patch vlfeat
        run: |
          cp src/vlfeat/vl/pgm.patch vlfeat/vl
          cd vlfeat/vl
          patch < pgm.patch

      - name: compile vlfeat
        run: |
          cd vlfeat
          make

      - name: clone bundler
        run: |
          git clone https://github.com/snavely/bundler_sfm.git
          cd bundler_sfm
          git checkout a35a8f5
          cd -

      - name: compile bundler
        run: |
          cd bundler_sfm
          sed -i 's/# USE_CERES=true/USE_CERES=true/' src/Makefile
          make

      - name: remove files
        run: |
          cd bundler_sfm/bin
          rm zlib1.dll
          rm ToSift.sh
          rm ToSiftList.sh
          rm extract_focal.pl

      - name: clone cmvs-pmvs
        run: |
          git clone https://github.com/pmoulon/CMVS-PMVS.git
          cd CMVS-PMVS
          git checkout 101c2ee
          cd -

      - name: compile cmvs-pmvs
        run: |
          cd CMVS-PMVS/program
          mkdir build; cd build
          cmake -G "CodeBlocks - Unix Makefiles" ..
          make

      - name: prepare files
        run: |
          cp vlfeat/bin/glnxa64/sift bundler_sfm/bin
          cp vlfeat/bin/glnxa64/libvl.so bundler_sfm/bin
          cp CMVS-PMVS/program/build/main/cmvs bundler_sfm/bin
          cp CMVS-PMVS/program/build/main/pmvs2 bundler_sfm/bin
          cp CMVS-PMVS/program/build/main/genOption bundler_sfm/bin
                  
          mkdir ${{ env.DIRNAME }}
          cp -r bundler_sfm/bin ${{ env.DIRNAME }}
          cp Makefile ${{ env.DIRNAME }}
          cp LICENSE ${{ env.DIRNAME }}
          cp vlfeat/COPYING ${{ env.DIRNAME }}/bin 

          cd ${{ env.DIRNAME }}
          mkdir lib
          mkdir -p examples/ET
          mkdir -p examples/kermit
          mv bin/libANN_char.so lib
          mv bin/libvl.so lib

          cd ..
          cp -r cfg ${{ env.DIRNAME }}
          cp -r docs ${{ env.DIRNAME }}
          cp -r utils ${{ env.DIRNAME }}
          cp bundler_sfm/examples/ET/*.jpg ${{ env.DIRNAME }}/examples/ET
          cp bundler_sfm/examples/kermit/*.jpg ${{ env.DIRNAME }}/examples/kermit

      - uses: actions/upload-artifact@v1
        with:
          name: ${{ env.DIRNAME }}
          path: ${{ env.DIRNAME }}

  test:
    runs-on: ubuntu-18.04
    needs: build
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0      

      - name: set variables
        run: |
          if [[ ${{ github.event_name }} == 'release' ]]; then
            echo "DIRNAME=lpt-${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          else
            echo "DIRNAME=lpt-dev$(git rev-list HEAD --count)" >> $GITHUB_ENV
          fi

      - name: install runtime dependencies
        run: |
          sudo apt update
          sudo apt install build-essential libjpeg62 liblapack3 libceres1 jhead \
                    python3 python3-pil python3-ruamel.yaml

      - uses: actions/download-artifact@v1
        with:
          name: ${{ env.DIRNAME }}

      - name: run example
        run: |
          chmod -R u+x ${{ env.DIRNAME }}/bin
          cd ${{ env.DIRNAME }}
          make

  release:
    needs: test
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-18.04
    steps:
      - name: set variables
        run: |
            echo "DIRNAME=lpt-${{ github.event.release.tag_name }}" >> $GITHUB_ENV

      - uses: actions/download-artifact@v1
        with:
          name: ${{ env.DIRNAME }}

      - name: tar
        run: |
          chmod -R u+x ${{ env.DIRNAME }}/bin
          tar -zcvf ${{ env.DIRNAME }}.tar.gz ${{ env.DIRNAME }}

      - name: release
        uses: AButler/upload-release-assets@v2.0
        with:
          files: "*.tar.gz"
          release-tag: ${{ github.event.release.tag_name }}
          repo-token: ${{ secrets.GITHUB_TOKEN }}

  docker-push:
    needs: release
    if: ${{ github.event_name == 'release' }}
    runs-on: ubuntu-18.04
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          username: epassaro
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: epassaro/linux-photogrammetry-tools:latest
          build-args: |
            VERSION=${{ github.event.release.tag_name }}

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
